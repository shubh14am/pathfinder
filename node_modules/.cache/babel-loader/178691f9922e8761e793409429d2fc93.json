{"ast":null,"code":"var dx = [-1, 0, 0, 1];\nvar dy = [0, -1, 1, 0];\nvar Board = new Array(20);\n\nfor (let i = 0; i < 20; i++) {\n  Board[i] = new Array(51);\n\n  for (let j = 0; j < 51; j++) {\n    Board[i][j] = false;\n  }\n}\n\nvar timer = 100;\n\nfunction fill(i, j, pre_i, pre_j) {\n  setTimeout(function () {\n    let x = pre_i + 10;\n    let y = pre_j + 10;\n    document.getElementById(x + \"\" + y).classList.remove(\"cur\");\n    if (pre_i !== 10 || pre_j !== 10) document.getElementById(x + \"\" + y).classList.add(\"abc\");\n    x = i + 10;\n    y = j + 10;\n    document.getElementById(x + \"\" + y).classList.add(\"cur\");\n  }, timer);\n}\n\nfunction DFS() {\n  return {\n    dfs: function dfs(sx, sy, ex, ey, dt) {\n      Board[sx][sy] = true;\n      timer += dt;\n\n      if (sx === ex && sy === ey) {\n        return true;\n      }\n\n      for (let k = 0; k < 4; k++) {\n        let nx = sx + dx[k];\n        let ny = sy + dy[k];\n\n        if (nx <= 20 && nx >= 0 && ny <= 50 && ny >= 0) {\n          if (Board[nx][ny] === false) {\n            fill(nx, ny, sx, sy);\n            let t = dfs(nx, ny, ex, ey, dt);\n\n            if (t === true) {\n              return true;\n            }\n          }\n        }\n      }\n\n      return false;\n    },\n    draw: function () {}\n  };\n}\n\nexport default DFS;","map":{"version":3,"sources":["D:/vscode(web)/majorProject/PathFinder/pathfinder/src/dfs.jsx"],"names":["dx","dy","Board","Array","i","j","timer","fill","pre_i","pre_j","setTimeout","x","y","document","getElementById","classList","remove","add","DFS","dfs","sx","sy","ex","ey","dt","k","nx","ny","t","draw"],"mappings":"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","sourcesContent":["var dx = [-1, 0, 0, 1];\r\nvar dy = [0, -1, 1, 0];\r\n\r\nvar Board = new Array(20);\r\nfor(let i =0;i<20;i++){\r\n    Board[i] = new Array(51);\r\n    for(let j=0;j<51;j++){\r\n        Board[i][j] = false;\r\n    }\r\n}\r\nvar timer = 100;\r\nfunction fill(i, j,pre_i,pre_j) {\r\n    setTimeout(function () {\r\n        let x = pre_i + 10;\r\n        let y = pre_j + 10;\r\n        document.getElementById(x + \"\" + y).classList.remove(\"cur\");\r\n        if (pre_i !== 10 || pre_j !== 10)\r\n            document.getElementById(x + \"\" + y).classList.add(\"abc\");\r\n        x = i+10; y = j + 10;\r\n        document.getElementById(x+\"\" +y).classList.add(\"cur\");\r\n    },timer);\r\n}\r\nfunction DFS(){\r\n    return {\r\n        dfs: function dfs(sx, sy, ex, ey,dt) {\r\n\r\n            Board[sx][sy] = true;\r\n            timer += dt;\r\n\r\n            if (sx === ex && sy === ey) {\r\n                return true;\r\n            }\r\n\r\n            for (let k = 0; k < 4; k++) {\r\n                let nx = sx + dx[k];\r\n                let ny = sy + dy[k];\r\n\r\n                if (nx <= 20 && nx >= 0 && ny <= 50 && ny >= 0) {\r\n                    if (Board[nx][ny] === false) {\r\n                        fill(nx, ny, sx, sy);\r\n                        let t = dfs(nx, ny, ex, ey,dt);\r\n                        if (t === true) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        draw:function(){\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default DFS;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}