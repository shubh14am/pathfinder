{"ast":null,"code":"var dx = [-1, 0, 0, 1];\nvar dy = [0, -1, 1, 0];\nvar Board = new Array(20);\n\nfor (let i = 0; i < 20; i++) {\n  Board[i] = new Array(51);\n\n  for (let j = 0; j < 51; j++) {\n    Board[i][j] = false;\n  }\n}\n\nvar Path = new Array(20);\n\nfor (let i = 0; i < 20; i++) {\n  Path[i] = new Array(51);\n}\n\nvar timer = 100;\n\nfunction fill(i, j, pre_i, pre_j) {\n  setTimeout(function () {\n    let x = pre_i + 10;\n    let y = pre_j + 10; // document.getElementById(x + \"\" + y).classList.remove(\"cur\");\n\n    if (pre_i !== 10 || pre_j !== 10) document.getElementById(x + \"\" + y).classList.add(\"abc\");\n    x = i + 10;\n    y = j + 10; // document.getElementById(x + \"\" + y).classList.add(\"cur\");\n  }, timer);\n}\n\nclass node {\n  constructor(i, j) {\n    this.x = i;\n    this.y = j;\n  }\n\n}\n\nfunction bfs(sx, sy, ex, ey) {\n  var pending_nodes = [];\n  let t = new node(sx, sy);\n  pending_nodes.push(t);\n\n  while (pending_nodes.length !== 0) {\n    timer += 10;\n    var tmp = pending_nodes.shift(); // console.log(tmp);\n\n    if (tmp.x === ex && tmp.y === ey) return true;\n\n    for (let k = 0; k < 4; k++) {\n      let nx = tmp.x + dx[k];\n      let ny = tmp.y + dy[k];\n\n      if (nx >= 0 && nx <= 19 && ny >= 0 && ny <= 50) {\n        if (Board[nx][ny] === false) {\n          fill(nx, ny, tmp.x, tmp.y);\n          Path[nx][ny] = new node(tmp.x, tmp.y);\n          if (nx === ex && ny === ey) return true;\n          Board[nx][ny] = true;\n          pending_nodes.push(new node(nx, ny));\n        }\n      }\n    }\n  }\n}\n\ndocument.getElementById(\"2050\").classList.add(\"end\");\ndocument.getElementById(\"2020\").classList.add(\"start\");\nlet t = bfs(10, 10, 5, 40);\nlet a = 5,\n    b = 40;\nlet count = 10;\n\nfunction fillp(a, b) {\n  setTimeout(function () {\n    let x = a + 10;\n    let y = b + 10;\n    document.getElementById(x + \"\" + y).className = \"end\";\n  }, timer);\n}\n\nwhile (a != 10 || b != 10) {\n  console.log(Path[a][b]);\n  fillp(a, b);\n  timer += 50;\n  a = Path[a][b].x;\n  b = Path[a][b].y;\n}","map":{"version":3,"sources":["D:/vscode(web)/majorProject/PathFinder/pathfinder/src/bfs.jsx"],"names":["dx","dy","Board","Array","i","j","Path","timer","fill","pre_i","pre_j","setTimeout","x","y","document","getElementById","classList","add","node","constructor","bfs","sx","sy","ex","ey","pending_nodes","t","push","length","tmp","shift","k","nx","ny","a","b","count","fillp","className","console","log"],"mappings":"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","sourcesContent":["var dx = [-1, 0, 0, 1];\r\nvar dy = [0, -1, 1, 0];\r\n\r\nvar Board = new Array(20);\r\nfor (let i = 0; i < 20; i++) {\r\n    Board[i] = new Array(51);\r\n    for (let j = 0; j < 51; j++) {\r\n        Board[i][j] = false;\r\n    }\r\n}\r\nvar Path = new Array(20);\r\nfor (let i = 0; i < 20; i++) {\r\n    Path[i] = new Array(51);\r\n}\r\nvar timer = 100;\r\nfunction fill(i, j, pre_i, pre_j) {\r\n    setTimeout(function () {\r\n        let x = pre_i + 10;\r\n        let y = pre_j + 10;\r\n        // document.getElementById(x + \"\" + y).classList.remove(\"cur\");\r\n        if (pre_i !== 10 || pre_j !== 10)\r\n            document.getElementById(x + \"\" + y).classList.add(\"abc\");\r\n        x = i + 10; y = j + 10;\r\n        // document.getElementById(x + \"\" + y).classList.add(\"cur\");\r\n    }, timer);\r\n}\r\n\r\nclass node{\r\n    constructor(i,j){\r\n        this.x = i;\r\n        this.y = j;\r\n    }\r\n}\r\nfunction bfs(sx,sy,ex,ey){\r\n\r\n    var pending_nodes = [];\r\n    let t = new node(sx,sy);\r\n    pending_nodes.push(t);\r\n\r\n    while(pending_nodes.length !== 0){\r\n        timer += 10;\r\n        var tmp = pending_nodes.shift();\r\n        // console.log(tmp);\r\n\r\n        if (tmp.x === ex && tmp.y === ey)\r\n            return true;\r\n\r\n        for(let k = 0;k<4;k++){\r\n            let nx = tmp.x+dx[k];\r\n            let ny = tmp.y+dy[k];\r\n            if(nx >= 0 && nx <=19 && ny >= 0 && ny<=50){\r\n                if(Board[nx][ny] === false){\r\n                    fill(nx, ny, tmp.x, tmp.y);\r\n                    Path[nx][ny] = new node(tmp.x,tmp.y);\r\n                    if (nx === ex && ny === ey) return true;\r\n                    Board[nx][ny] = true;\r\n                    pending_nodes.push(new node(nx,ny));\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\ndocument.getElementById(\"2050\").classList.add(\"end\");\r\ndocument.getElementById(\"2020\").classList.add(\"start\");\r\n\r\nlet t = bfs(10, 10, 5, 40);\r\n\r\nlet a = 5,b = 40;\r\nlet count = 10;\r\n\r\nfunction fillp(a,b){\r\n    setTimeout(function(){\r\n        let x = a+10;\r\n        let y = b+10;\r\n        document.getElementById(x+\"\"+y).className = \"end\";\r\n    },timer);\r\n}\r\nwhile(a!= 10 || b!= 10){\r\n    console.log(Path[a][b]);\r\n    fillp(a,b);\r\n    timer += 50;\r\n    a = Path[a][b].x;\r\n    b = Path[a][b].y;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}